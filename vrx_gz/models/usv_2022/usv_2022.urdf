<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/doge/vrx_ws/install/share/usv_2022_gazebo/urdf/usv_2022_gazebo.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Basic WAM-V with gazebo plugins for dynamics -->
<robot name="usv_2022">
  <!-- Basic model of the 16' WAM-V USV -->
  <link name="usv_2022/base_link">
    <visual>
      <origin rpy="0 0 1.57" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gz/models/usv_2022/mesh/usv_2022.dae"/>
      </geometry>
    </visual>
    <!-- Main float -->
    <collision name="left_float">
      <origin rpy="0 1.57 0" xyz="0.1 0.29 0"/>
      <geometry>
        <cylinder length="1.08" radius="0.06"/>
      </geometry>
    </collision>

    <!-- Main float -->
    <collision name="right_float">
      <origin rpy="0 1.57 0" xyz="0.1 -0.29 0"/>
      <geometry>
        <cylinder length="1.08" radius="0.06"/>
      </geometry>
    </collision>

    <inertial>
      <!-- From WAM-V spec sheet -->
      <mass value="6.0"/>
      <inertia ixx="0.713" ixy="0.0" ixz="0.0" iyy="1.229" iyz="0.012" izz="0.569"/>

    </inertial>
  </link>
  <gazebo>
    <enable_wind>true</enable_wind>
  </gazebo>


  <!--Gazebo Plugin for simulating WAM-V dynamics-->
  <gazebo>
    <!-- Left hull -->
    <plugin filename="libSurface.so" name="vrx::Surface">
      <link_name>usv_2022/base_link</link_name>
      <hull_length>1.1</hull_length>
      <hull_radius>0.1</hull_radius>
      <fluid_level>0</fluid_level>
      <points>
        <point>0.3 0.29 -0.05</point>
        <point>-0.3 0.29 -0.05</point>
      </points>
      <wavefield>
        <topic>/vrx/wavefield/parameters</topic>
      </wavefield>
    </plugin>
    <!-- Right hull -->
    <plugin filename="libSurface.so" name="vrx::Surface">
      <link_name>usv_2022/base_link</link_name>
      <hull_length>1.1</hull_length>
      <hull_radius>0.1</hull_radius>
      <fluid_level>0</fluid_level>
      <points>
        <point>0.3 -0.29 -0.05</point>
        <point>-0.3 -0.29 -0.05</point>
      </points>
      <wavefield>
        <topic>/vrx/wavefield/parameters</topic>
      </wavefield>
    </plugin>
    <plugin filename="libSimpleHydrodynamics.so" name="vrx::SimpleHydrodynamics">
      <link_name>usv_2022/base_link</link_name>
      <!-- Added mass -->
      <xDotU>0.0</xDotU>
      <yDotV>0.0</yDotV>
      <nDotR>0.0</nDotR>
      <!-- Linear and quadratic drag -->
      <xU>50.3</xU>
      <xUU>70.4</xUU>
      <yV>40.0</yV>
      <yVV>0.0</yVV>
      <zW>500.0</zW>
      <kP>100.0</kP>
      <mQ>100.0</mQ>
      <nR>400.0</nR>
      <nRR>0.0</nRR>
    </plugin>
  </gazebo>
  <!-- === TF === -->
  <!-- Publish robot state information -->
  <gazebo>
    <plugin filename="libgz-sim-pose-publisher-system.so" name="gz::sim::systems::PosePublisher">
      <publish_link_pose>true</publish_link_pose>
      <publish_sensor_pose>true</publish_sensor_pose>
      <publish_collision_pose>false</publish_collision_pose>
      <publish_visual_pose>false</publish_visual_pose>
      <publish_nested_model_pose>true</publish_nested_model_pose>
      <publish_model_pose>false</publish_model_pose>
      <use_pose_vector_msg>true</use_pose_vector_msg>
      <static_publisher>true</static_publisher>
      <static_update_frequency>1</static_update_frequency>
    </plugin>
  </gazebo>
<!--thrusters-->

<!--LEFT thruster-->

<link name="usv_2022/left_engine_link">
    <visual>
      <origin rpy="1.57 0 1.57" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gz/models/bluerobotics_t200/T200_Thruster_CCW/meshes/T200_Thruster.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <link name="usv_2022/left_propeller_link">
    <visual>
    <origin rpy="0 1.57 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gz/models/bluerobotics_t200/T200_Thruster_CCW/meshes/T200_Prop_CCW.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.008545" ixy="0.0" ixz="0.0" iyy="0.008545" iyz="0.0" izz="0.0144"/>
    </inertial>
  </link>
  <joint name="usv_2022/left_chassis_engine_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="-0.30 0.277 -0.105"/>
    <parent link="usv_2022/base_link"/>
    <child link="usv_2022/left_engine_link"/>
  </joint>
  <joint name="usv_2022/left_engine_propeller_joint" type="continuous">
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="usv_2022/left_engine_link"/>
    <child link="usv_2022/left_propeller_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <limit effort="100" velocity="100"/>
    <dynamics damping="0.05" friction="0.05"/>
  </joint>
  <gazebo>
    <plugin filename="gz-sim-thruster-system" name="gz::sim::systems::Thruster">
      <joint_name>usv_2022/left_engine_propeller_joint</joint_name>
      <thrust_coefficient>0.004422</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.07</propeller_diameter>
      <velocity_control>true</velocity_control>
      <!-- max total thrust / 2 -->
      <max_thrust_cmd>50</max_thrust_cmd>
      <namespace>usv_2022</namespace>
      <topic>thrusters/left/thrust</topic>
      <!-- Not used by Gazebo but used to run the bridge easily -->
      <name>left</name>
    </plugin>
  </gazebo>


<link name="usv_2022/right_engine_link">
    <visual>
      <origin rpy="1.57 0 1.57" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gz/models/bluerobotics_t200/T200_Thruster_CCW/meshes/T200_Thruster.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <link name="usv_2022/right_propeller_link">
    <visual>
        <origin rpy="0 1.57 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gz/models/bluerobotics_t200/T200_Thruster_CCW/meshes/T200_Prop_CCW.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.008545" ixy="0.0" ixz="0.0" iyy="0.008545" iyz="0.0" izz="0.0144"/>
    </inertial>
  </link>
  <joint name="usv_2022/right_chassis_engine_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="-0.30 -0.277 -0.105"/>
    <parent link="usv_2022/base_link"/>
    <child link="usv_2022/right_engine_link"/>
  </joint>
  <joint name="usv_2022/right_engine_propeller_joint" type="continuous">
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="usv_2022/right_engine_link"/>
    <child link="usv_2022/right_propeller_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <limit effort="100" velocity="100"/>
    <dynamics damping="0.05" friction="0.05"/>
  </joint>
  <gazebo>
    <plugin filename="gz-sim-thruster-system" name="gz::sim::systems::Thruster">
      <joint_name>usv_2022/right_engine_propeller_joint</joint_name>
      <thrust_coefficient>0.004422</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.07</propeller_diameter>
      <velocity_control>true</velocity_control>
      <!-- max total thrust / 2 -->
      <max_thrust_cmd>50</max_thrust_cmd>
      <namespace>usv_2022</namespace>
      <topic>thrusters/right/thrust</topic>
      <!-- Not used by Gazebo but used to run the bridge easily -->
      <name>right</name>
    </plugin>
  </gazebo>








  <!-- Monocular Camera -->
  <link name="usv_2022/front_left_camera_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.033 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
      </geometry>
    </visual>
    <collision name="front_left_camera_lens_collision">
      <origin rpy="0 1.5707963267948966 0" xyz="0.018 0 0"/>
      <geometry>
        <cylinder length="0.042" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="front_left_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0"/>
      <geometry>
        <box size="0.036 0.03 0.03"/>
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746"/>
    </inertial>
  </link>
  <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
  <link name="usv_2022/front_left_camera_link_optical">
    </link>
  <!-- Sensor post -->
  <link name="usv_2022/front_left_camera_post_link">
    <visual>
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
      <material name="front_left_camera_post_material">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision name="front_left_camera_post_collision">
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.15885000000000002"/>
      <inertia ixx="0.0004146717033750001" ixy="0" ixz="0" iyy="0.0004146717033750001" iyz="0" izz="4.5875880000000004e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="usv_2022/front_left_camera_post_arm_link">
    <visual name="front_left_camera_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="front_left_camera_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="usv_2022/base_to_front_left_camera_post_joint" type="fixed">
    <origin rpy="0 0 0.0" xyz="0.34 -0.05 0.2"/>
    <parent link="usv_2022/base_link"/>
    <child link="usv_2022/front_left_camera_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="usv_2022/front_left_camera_post_to_front_left_camera_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.08825000000000008"/>
    <parent link="usv_2022/front_left_camera_post_link"/>
    <child link="usv_2022/front_left_camera_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to camera joint -->
  <joint name="usv_2022/front_left_camera_post_arm_to_front_left_camera_joint" type="fixed">
    <origin rpy="0.0 0.2617993877991494 0.0" xyz="0.02 0 0.027"/>
    <parent link="usv_2022/front_left_camera_post_arm_link"/>
    <child link="usv_2022/front_left_camera_link"/>
  </joint>
  <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
  <joint name="usv_2022/front_left_camera_to_front_left_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="usv_2022/front_left_camera_link"/>
    <child link="usv_2022/front_left_camera_link_optical"/>
  </joint>
  <!-- Gazebo camera setup -->
  <gazebo reference="usv_2022/front_left_camera_link">
    <visual>
      <material>
        <diffuse>1.0 1.0 1.0</diffuse>
        <specular>1.0 1.0 1.0</specular>
        <pbr>
          <metal>
            <albedo_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Albedo.png</albedo_map>
            <normal_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Normal.png</normal_map>
            <roughness_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Roughness.png</roughness_map>
            <metalness_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Metalness.png</metalness_map>
          </metal>
        </pbr>
      </material>
    </visual>
    <sensor name="front_left_camera_sensor" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="front_left_camera_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
    </sensor>
  </gazebo>
  <!-- Monocular Camera -->
  <link name="usv_2022/front_right_camera_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.033 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
      </geometry>
    </visual>
    <collision name="front_right_camera_lens_collision">
      <origin rpy="0 1.5707963267948966 0" xyz="0.018 0 0"/>
      <geometry>
        <cylinder length="0.042" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="front_right_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0"/>
      <geometry>
        <box size="0.036 0.03 0.03"/>
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746"/>
    </inertial>
  </link>
  <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
  <link name="usv_2022/front_right_camera_link_optical">
    </link>
  <!-- Sensor post -->
  <link name="usv_2022/front_right_camera_post_link">
    <visual>
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
      <material name="front_right_camera_post_material">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision name="front_right_camera_post_collision">
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.15885000000000002"/>
      <inertia ixx="0.0004146717033750001" ixy="0" ixz="0" iyy="0.0004146717033750001" iyz="0" izz="4.5875880000000004e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="usv_2022/front_right_camera_post_arm_link">
    <visual name="front_right_camera_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="front_right_camera_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="usv_2022/base_to_front_right_camera_post_joint" type="fixed">
    <origin rpy="0 0 0.0" xyz="0.34 0.05 0.2"/>
    <parent link="usv_2022/base_link"/>
    <child link="usv_2022/front_right_camera_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="usv_2022/front_right_camera_post_to_front_right_camera_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.08825000000000008"/>
    <parent link="usv_2022/front_right_camera_post_link"/>
    <child link="usv_2022/front_right_camera_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to camera joint -->
  <joint name="usv_2022/front_right_camera_post_arm_to_front_right_camera_joint" type="fixed">
    <origin rpy="0.0 0.2617993877991494 0.0" xyz="0.02 0 0.027"/>
    <parent link="usv_2022/front_right_camera_post_arm_link"/>
    <child link="usv_2022/front_right_camera_link"/>
  </joint>
  <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
  <joint name="usv_2022/front_right_camera_to_front_right_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="usv_2022/front_right_camera_link"/>
    <child link="usv_2022/front_right_camera_link_optical"/>
  </joint>
  <!-- Gazebo camera setup -->
  <gazebo reference="usv_2022/front_right_camera_link">
    <visual>
      <material>
        <diffuse>1.0 1.0 1.0</diffuse>
        <specular>1.0 1.0 1.0</specular>
        <pbr>
          <metal>
            <albedo_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Albedo.png</albedo_map>
            <normal_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Normal.png</normal_map>
            <roughness_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Roughness.png</roughness_map>
            <metalness_map>model://vrx_gazebo/models/mono_camera/mesh/mono_camera_Metalness.png</metalness_map>
          </metal>
        </pbr>
      </material>
    </visual>
    <sensor name="front_right_camera_sensor" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="front_right_camera_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
    </sensor>
  </gazebo>
  <!-- Monocular Camera -->
  
  <link name="usv_2022/gps_usv_2022_link">
    <visual name="gps_usv_2022_visual">
      <geometry>
        <mesh filename="package://usv_2022_gazebo/models/gps/mesh/gps.dae"/>
      </geometry>
    </visual>
    <collision name="gps_usv_2022_collision_base">
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <cylinder length="0.05" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="gps_usv_2022_collision_antenna">
      <origin rpy="0 0 0" xyz="0 0 0.11"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.006458" ixy="0.0" ixz="0.0" iyy="0.006458" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <joint name="usv_2022/gps_usv_2022_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0.0 0.0 0.0" xyz="0 0 0"/>
    <parent link="usv_2022/base_link"/>
    <child link="usv_2022/gps_usv_2022_link"/>
  </joint>
  <gazebo reference="usv_2022/gps_usv_2022_link">
    <sensor name="navsat" type="navsat">
      <always_on>1</always_on>
      <update_rate>15</update_rate>
      <!--<topic>${namespace}/${sensor_namespace}gps/gps/fix</topic>-->
    </sensor>
  </gazebo>
  <link name="usv_2022/imu_usv_2022_link">
    <visual name="imu_usv_2022_visual">
      &gt;
        
      <geometry>
        <box size="0.05 0.025 0.005"/>
      </geometry>
      <material name="imu_usv_2022_visual_material">
        <color rgba="1.0 0.0 00 1.0"/>
      </material>
    </visual>
    <collision name="imu_usv_2022_collision">
      &gt;
        
      <geometry>
        <box size="0.05 0.025 0.005"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00000542" ixy="0.0" ixz="0.0" iyy="0.00002104" iyz="0.0" izz="0.00002604"/>
    </inertial>
  </link>
  <joint name="usv_2022/imu_usv_2022_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0.0 0.0 0.0" xyz="0 0 0"/>
    <parent link="usv_2022/base_link"/>
    <child link="usv_2022/imu_usv_2022_link"/>
  </joint>
  <gazebo reference="usv_2022/imu_usv_2022_link">
    <sensor name="imu_usv_2022_sensor" type="imu">
      <update_rate>15</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  <!-- 3d lidar sensor -->
  <link name="usv_2022/lidar_usv_2022_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.035"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_usv_2022_collision">
      <geometry>
        <cylinder length="0.075" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00109375" ixy="0" ixz="0" iyy="0.00109375" iyz="0" izz="0.00125"/>
    </inertial>
  </link>
  <!-- Sensor post -->
  <link name="usv_2022/lidar_usv_2022_post_link">
    <visual>
      <geometry>
        <cylinder length="0.45350000000000007" radius="0.0076"/>
      </geometry>
      <material name="lidar_usv_2022_post_material">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision name="lidar_usv_2022_post_collision">
      <geometry>
        <cylinder length="0.45350000000000007" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.40815000000000007"/>
      <inertia ixx="0.007000980964125004" ixy="0" ixz="0" iyy="0.007000980964125004" iyz="0" izz="1.1787372000000002e-05"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="usv_2022/lidar_usv_2022_post_arm_link">
    <visual name="lidar_usv_2022_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_usv_2022_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="usv_2022/base_to_lidar_usv_2022_post_joint" type="fixed">
    <origin rpy="0 0 0.0" xyz="0.34 0.0 0.2"/>
    <parent link="usv_2022/base_link"/>
    <child link="usv_2022/lidar_usv_2022_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="usv_2022/lidar_usv_2022_post_to_lidar_usv_2022_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.22675000000000006"/>
    <parent link="usv_2022/lidar_usv_2022_post_link"/>
    <child link="usv_2022/lidar_usv_2022_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to lidar joint -->
  <joint name="usv_2022/lidar_usv_2022_post_arm_to_lidar_usv_2022_joint" type="fixed">
    <origin rpy="0.0 0.13962634015954636 0.0" xyz="0.04 0 0.05"/>
    <parent link="usv_2022/lidar_usv_2022_post_arm_link"/>
    <child link="usv_2022/lidar_usv_2022_link"/>
  </joint>
  <gazebo reference="usv_2022/lidar_usv_2022_link">
    <visual>
      <material>
        <diffuse>1.0 1.0 1.0</diffuse>
        <specular>1.0 1.0 1.0</specular>
        <pbr>
          <metal>
            <albedo_map>model://vrx_gazebo/models/3d_lidar/mesh/3d_Lidar_Albedo.png</albedo_map>
            <normal_map>model://vrx_gazebo/models/3d_lidar/mesh/3d_Lidar_Normal.png</normal_map>
            <roughness_map>model://vrx_gazebo/models/3d_lidar/mesh/3d_Lidar_Roughness.png</roughness_map>
            <metalness_map>model://vrx_gazebo/models/3d_lidar/mesh/3d_Lidar_Metalness.png</metalness_map>
          </metal>
        </pbr>
      </material>
    </visual>
    <sensor name="lidar_usv_2022_sensor" type="gpu_ray">
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1875.0</samples>
            <resolution>1</resolution>
            <min_angle>-3.141592653589793</min_angle>
            <max_angle>3.141592653589793</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.2617993877991494</min_angle>
            <max_angle>0.2617993877991494</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>130</max>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
    </sensor>
  </gazebo>
  <!--specs for 16 beam lidar are implemented by default.
          See usv_2022_3d_lidar for those-->

</robot>
